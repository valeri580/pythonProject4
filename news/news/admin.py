from django.contrib import admin
from django.urls import reverse
from django.utils.html import format_html
from .models import News_post, Like, PendingNews

# Register your models here.

@admin.register(News_post)
class NewsPostAdmin(admin.ModelAdmin):
	list_display = ('title', 'author', 'pub_date', 'is_approved', 'is_from_internet', 'total_likes')
	list_filter = ('pub_date', 'author', 'is_approved', 'is_from_internet')
	search_fields = ('title', 'short_description')
	date_hierarchy = 'pub_date'
	readonly_fields = ('total_likes',)
	
	fieldsets = (
		('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
			'fields': ('title', 'short_description', 'text', 'image')
		}),
		('–ü—É–±–ª–∏–∫–∞—Ü–∏—è', {
			'fields': ('author', 'pub_date', 'is_approved')
		}),
		('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', {
			'fields': ('source_url', 'is_from_internet', 'total_likes'),
			'classes': ('collapse',)
		})
	)

@admin.register(PendingNews)
class PendingNewsAdmin(admin.ModelAdmin):
	list_display = ('title', 'created_by', 'created_at', 'is_processed', 'approve_link')
	list_filter = ('created_at', 'is_processed', 'created_by')
	search_fields = ('title', 'short_description')
	readonly_fields = ('created_at', 'created_by')
	
	def approve_link(self, obj):
		if not obj.is_processed:
			url = reverse('admin_approve_news', args=[obj.id])
			return format_html('<a href="{}" class="button">–ú–æ–¥–µ—Ä–∏—Ä–æ–≤–∞—Ç—å</a>', url)
		return "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
	approve_link.short_description = '–î–µ–π—Å—Ç–≤–∏—è'
	
	def get_queryset(self, request):
		return super().get_queryset(request).select_related('created_by')

@admin.register(Like)
class LikeAdmin(admin.ModelAdmin):
	list_display = ('user', 'news_post', 'created_at')
	list_filter = ('created_at', 'news_post')
	search_fields = ('user__username', 'news_post__title')


# –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∞–¥–º–∏–Ω-–¥–µ–π—Å—Ç–≤–∏—è
class CustomAdminSite(admin.AdminSite):
	site_header = '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞'
	site_title = '–ù–æ–≤–æ—Å—Ç–∏'
	index_title = '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–Ω—ã–º —Å–∞–π—Ç–æ–º'
	
	def each_context(self, request):
		context = super().each_context(request)
		if request.user.is_staff:
			context['custom_links'] = [
				{
					'title': 'üì• –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞',
					'url': reverse('admin_load_news'),
					'description': '–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏'
				},
				{
					'title': 'üìã –ù–æ–≤–æ—Å—Ç–∏ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏',
					'url': reverse('admin_pending_news'), 
					'description': '–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π'
				}
			]
		return context

# –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∞–¥–º–∏–Ω–∫—É
admin.site.__class__ = CustomAdminSite
